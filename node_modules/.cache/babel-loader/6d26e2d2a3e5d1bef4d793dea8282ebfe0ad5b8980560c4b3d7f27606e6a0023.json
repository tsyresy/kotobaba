{"ast":null,"code":"var _jsxFileName = \"/home/tsyresy/Desktop/Website/Comment picker/random-draw/src/components/NameScroller.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Box, Chip } from '@mui/material';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VISIBLE_ITEMS = 5;\nconst NameScroller = ({\n  names,\n  targetName,\n  triggerSpin\n}) => {\n  _s();\n  const [displayedNames, setDisplayedNames] = useState([]);\n  const [rolling, setRolling] = useState(false);\n  useEffect(() => {\n    let isMounted = true;\n    const spin = () => {\n      setRolling(true);\n      let steps = 30;\n      let delay = 50;\n      let index = Math.floor(Math.random() * names.length);\n      const spinStep = () => {\n        if (!isMounted) return;\n        const batch = [];\n        for (let i = 0; i < VISIBLE_ITEMS; i++) {\n          batch.push(names[(index + i) % names.length]);\n        }\n        setDisplayedNames(batch);\n        if (steps <= 0) {\n          const finalIndex = names.findIndex(n => n === targetName);\n          const finalBatch = [];\n          for (let i = 0; i < VISIBLE_ITEMS; i++) {\n            finalBatch.push(names[(finalIndex + i) % names.length]);\n          }\n          setDisplayedNames(finalBatch);\n          setRolling(false);\n          return;\n        }\n        steps--;\n        index = (index + 1) % names.length;\n        delay += 15;\n        setTimeout(spinStep, delay);\n      };\n      spinStep();\n    };\n    if (triggerSpin && targetName) {\n      spin();\n    }\n    return () => {\n      isMounted = false;\n    };\n  }, [triggerSpin, targetName, names]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      height: 200,\n      overflow: 'hidden',\n      borderRadius: 2,\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      bgcolor: '#f5f5f5',\n      boxShadow: 3,\n      px: 2\n    },\n    children: displayedNames.map((name, i) => /*#__PURE__*/_jsxDEV(Chip, {\n      label: name,\n      color: i === 2 ? 'secondary' : 'primary',\n      variant: \"filled\",\n      sx: {\n        fontSize: i === 2 ? '1.3rem' : '1rem',\n        fontWeight: i === 2 ? 'bold' : 'normal',\n        mb: 0.5,\n        opacity: i === 2 ? 1 : 0.5\n      }\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(NameScroller, \"YkacCCnce0Qa0k6+/OX0n02AX0s=\");\n_c = NameScroller;\nexport default NameScroller;\nvar _c;\n$RefreshReg$(_c, \"NameScroller\");","map":{"version":3,"names":["React","useEffect","useState","Box","Chip","jsxDEV","_jsxDEV","VISIBLE_ITEMS","NameScroller","names","targetName","triggerSpin","_s","displayedNames","setDisplayedNames","rolling","setRolling","isMounted","spin","steps","delay","index","Math","floor","random","length","spinStep","batch","i","push","finalIndex","findIndex","n","finalBatch","setTimeout","sx","height","overflow","borderRadius","display","flexDirection","alignItems","justifyContent","bgcolor","boxShadow","px","children","map","name","label","color","variant","fontSize","fontWeight","mb","opacity","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/tsyresy/Desktop/Website/Comment picker/random-draw/src/components/NameScroller.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Box, Chip } from '@mui/material';\nimport '../App.css';\n\nconst VISIBLE_ITEMS = 5;\n\nconst NameScroller = ({ names, targetName, triggerSpin }) => {\n    const [displayedNames, setDisplayedNames] = useState([]);\n    const [rolling, setRolling] = useState(false);\n\n    useEffect(() => {\n        let isMounted = true;\n\n        const spin = () => {\n            setRolling(true);\n            let steps = 30;\n            let delay = 50;\n            let index = Math.floor(Math.random() * names.length);\n\n            const spinStep = () => {\n                if (!isMounted) return;\n\n                const batch = [];\n                for (let i = 0; i < VISIBLE_ITEMS; i++) {\n                    batch.push(names[(index + i) % names.length]);\n                }\n                setDisplayedNames(batch);\n\n                if (steps <= 0) {\n                    const finalIndex = names.findIndex(n => n === targetName);\n                    const finalBatch = [];\n                    for (let i = 0; i < VISIBLE_ITEMS; i++) {\n                        finalBatch.push(names[(finalIndex + i) % names.length]);\n                    }\n                    setDisplayedNames(finalBatch);\n                    setRolling(false);\n                    return;\n                }\n                steps--;\n                index = (index + 1) % names.length;\n                delay += 15;\n                setTimeout(spinStep, delay);\n            };\n\n            spinStep();\n        };\n\n        if (triggerSpin && targetName) {\n            spin();\n        }\n\n        return () => {\n            isMounted = false;\n        };\n    }, [triggerSpin, targetName, names]);\n\n    return (\n        <Box\n            sx={{\n                height: 200,\n                overflow: 'hidden',\n                borderRadius: 2,\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n                justifyContent: 'center',\n                bgcolor: '#f5f5f5',\n                boxShadow: 3,\n                px: 2\n            }}\n        >\n            {displayedNames.map((name, i) => (\n                <Chip\n                    key={i}\n                    label={name}\n                    color={i === 2 ? 'secondary' : 'primary'}\n                    variant=\"filled\"\n                    sx={{\n                        fontSize: i === 2 ? '1.3rem' : '1rem',\n                        fontWeight: i === 2 ? 'bold' : 'normal',\n                        mb: 0.5,\n                        opacity: i === 2 ? 1 : 0.5\n                    }}\n                />\n            ))}\n        </Box>\n    );\n};\n\nexport default NameScroller;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}